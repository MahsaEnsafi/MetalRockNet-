# -*- coding: utf-8 -*-
"""MetalRockNet.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16ehLyVztUrLkNr2J-6DKI9A3ZxKo84ER
"""

from google.colab import drive
drive.mount('/content/drive')



import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix,classification_report
import tensorflow as tf
from tensorflow import keras



data=pd.read_csv('data.csv')
data.sample(4)

data.shape

data.columns

data['Column61'].value_counts()

X=data.drop('Column61',axis=1)
Y=data['Column61']
print(X.shape)
print(Y.shape)

Y=pd.get_dummies(Y,drop_first=True,dtype=np.float32)#R:1 M:0
Y.head()

Y.value_counts()

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.25,random_state=5)

print(X_train.shape)
print(Y_train.shape)
print(X_test.shape)
print(Y_test.shape)

model=keras.Sequential([
    keras.layers.Dense(60,input_shape=(60,),activation='relu'),
    keras.layers.Dropout(0.5),
    keras.layers.Dense(30,activation='relu'),
    keras.layers.Dropout(0.5),
    keras.layers.Dense(15,activation='relu'),
    keras.layers.Dense(1,activation='sigmoid')
])
model.compile(
    loss=keras.losses.BinaryCrossentropy,
    optimizer='adam',
    metrics=['accuracy']
)
model.fit(X_train,Y_train,epochs=130,batch_size=8)

model.evaluate(X_test,Y_test)

Y_predict=model.predict(X_test)
Y_pred=[]
for label in Y_predict:
  if label<0.5:
    Y_pred.append(0)
  else:
    Y_pred.append(1)
print(Y_pred[:5])
print(Y_test[:5])

print(classification_report(Y_test,Y_pred))
